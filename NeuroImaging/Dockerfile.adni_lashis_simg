# Your version: 0+unknown Latest version: 0.6.0
# Generated by Neurodocker version 0+unknown
# Timestamp: 2019-12-07 01:16:34 UTC
# 
# Thank you for using Neurodocker. If you discover any issues
# or ways to improve this software, please submit an issue or
# pull request on our GitHub repository:
# 
#     https://github.com/kaczmarj/neurodocker

FROM neurodebian:stretch-non-free

ARG DEBIAN_FRONTEND="noninteractive"

ENV LANG="en_US.UTF-8" \
    LC_ALL="en_US.UTF-8" \
    ND_ENTRYPOINT="/neurodocker/startup.sh"
RUN export ND_ENTRYPOINT="/neurodocker/startup.sh" \
    && apt-get update -qq \
    && apt-get install -y -q --no-install-recommends \
           apt-utils \
           bzip2 \
           ca-certificates \
           curl \
           locales \
           unzip \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \
    && dpkg-reconfigure --frontend=noninteractive locales \
    && update-locale LANG="en_US.UTF-8" \
    && chmod 777 /opt && chmod a+s /opt \
    && mkdir -p /neurodocker \
    && if [ ! -f "$ND_ENTRYPOINT" ]; then \
         echo '#!/usr/bin/env bash' >> "$ND_ENTRYPOINT" \
    &&   echo 'set -e' >> "$ND_ENTRYPOINT" \
    &&   echo 'export USER="${USER:=`whoami`}"' >> "$ND_ENTRYPOINT" \
    &&   echo 'if [ -n "$1" ]; then "$@"; else /usr/bin/env bash; fi' >> "$ND_ENTRYPOINT"; \
    fi \
    && chmod -R 777 /neurodocker && chmod a+s /neurodocker

ENTRYPOINT ["/neurodocker/startup.sh"]

RUN apt-get update -qq \
    && apt-get install -y -q --no-install-recommends \
           libxt6 \
           libxext6 \
           libxtst6 \
           libgl1-mesa-glx \
           libc6 \
           libice6 \
           libsm6 \
           libx11-6 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

RUN printf '#!/bin/bash\nls -la' > /usr/bin/ll

RUN chmod +x /usr/bin/ll

COPY ["ashs-fastashs_beta", "/ashs-fastashs_beta"]

COPY ["ashsT1_atlas_upennpmc_07202018", "/ashsT1_atlas_upennpmc_07202018"]

ENV ASHS_ROOT="/ashs-fastashs_beta"

ENV FREESURFER_HOME="/opt/freesurfer-6.0.1" \
    PATH="/opt/freesurfer-6.0.1/bin:$PATH"
RUN apt-get update -qq \
    && apt-get install -y -q --no-install-recommends \
           bc \
           libgomp1 \
           libxmu6 \
           libxt6 \
           perl \
           tcsh \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && echo "Downloading FreeSurfer ..." \
    && mkdir -p /opt/freesurfer-6.0.1 \
    && curl -fsSL --retry 5 ftp://surfer.nmr.mgh.harvard.edu/pub/dist/freesurfer/6.0.1/freesurfer-Linux-centos6_x86_64-stable-pub-v6.0.1.tar.gz \
    | tar -xz -C /opt/freesurfer-6.0.1 --strip-components 1 \
         --exclude='freesurfer/average/mult-comp-cor' \
         --exclude='freesurfer/lib/cuda' \
         --exclude='freesurfer/lib/qt' \
         --exclude='freesurfer/subjects/V1_average' \
         --exclude='freesurfer/subjects/bert' \
         --exclude='freesurfer/subjects/cvs_avg35' \
         --exclude='freesurfer/subjects/cvs_avg35_inMNI152' \
         --exclude='freesurfer/subjects/fsaverage3' \
         --exclude='freesurfer/subjects/fsaverage4' \
         --exclude='freesurfer/subjects/fsaverage5' \
         --exclude='freesurfer/subjects/fsaverage6' \
         --exclude='freesurfer/subjects/fsaverage_sym' \
         --exclude='freesurfer/trctrain' \
    && sed -i '$isource "/opt/freesurfer-6.0.1/SetUpFreeSurfer.sh"' "$ND_ENTRYPOINT"

ENV ANTSPATH="/opt/ants-2.3.0" \
    PATH="/opt/ants-2.3.0:$PATH"
RUN echo "Downloading ANTs ..." \
    && mkdir -p /opt/ants-2.3.0 \
    && curl -fsSL --retry 5 https://dl.dropbox.com/s/b3iymb9ml36ecp9/ants-Linux-centos6_x86_64-v2.3.0.tar.gz \
    | tar -xz -C /opt/ants-2.3.0 --strip-components 1

COPY ["LASHiS", "/LASHiS"]

WORKDIR /proc_temp

WORKDIR /90days

WORKDIR /30days

WORKDIR /QRISdata

WORKDIR /RDS

WORKDIR /data

WORKDIR /home/neuro

WORKDIR /TMPDIR

RUN echo '{ \
    \n  "pkg_manager": "apt", \
    \n  "instructions": [ \
    \n    [ \
    \n      "base", \
    \n      "neurodebian:stretch-non-free" \
    \n    ], \
    \n    [ \
    \n      "install", \
    \n      [ \
    \n        "libxt6", \
    \n        "libxext6", \
    \n        "libxtst6", \
    \n        "libgl1-mesa-glx", \
    \n        "libc6", \
    \n        "libice6", \
    \n        "libsm6", \
    \n        "libx11-6" \
    \n      ] \
    \n    ], \
    \n    [ \
    \n      "run", \
    \n      "printf '"'"'#!/bin/bash\\\nls -la'"'"' > /usr/bin/ll" \
    \n    ], \
    \n    [ \
    \n      "run", \
    \n      "chmod +x /usr/bin/ll" \
    \n    ], \
    \n    [ \
    \n      "copy", \
    \n      [ \
    \n        "ashs-fastashs_beta", \
    \n        "/ashs-fastashs_beta" \
    \n      ] \
    \n    ], \
    \n    [ \
    \n      "copy", \
    \n      [ \
    \n        "ashsT1_atlas_upennpmc_07202018", \
    \n        "/ashsT1_atlas_upennpmc_07202018" \
    \n      ] \
    \n    ], \
    \n    [ \
    \n      "env", \
    \n      { \
    \n        "ASHS_ROOT": "/ashs-fastashs_beta" \
    \n      } \
    \n    ], \
    \n    [ \
    \n      "freesurfer", \
    \n      { \
    \n        "version": "6.0.1" \
    \n      } \
    \n    ], \
    \n    [ \
    \n      "ants", \
    \n      { \
    \n        "version": "2.3.0" \
    \n      } \
    \n    ], \
    \n    [ \
    \n      "copy", \
    \n      [ \
    \n        "LASHiS", \
    \n        "/LASHiS" \
    \n      ] \
    \n    ], \
    \n    [ \
    \n      "workdir", \
    \n      "/proc_temp" \
    \n    ], \
    \n    [ \
    \n      "workdir", \
    \n      "/90days" \
    \n    ], \
    \n    [ \
    \n      "workdir", \
    \n      "/30days" \
    \n    ], \
    \n    [ \
    \n      "workdir", \
    \n      "/QRISdata" \
    \n    ], \
    \n    [ \
    \n      "workdir", \
    \n      "/RDS" \
    \n    ], \
    \n    [ \
    \n      "workdir", \
    \n      "/data" \
    \n    ], \
    \n    [ \
    \n      "workdir", \
    \n      "/home/neuro" \
    \n    ], \
    \n    [ \
    \n      "workdir", \
    \n      "/TMPDIR" \
    \n    ] \
    \n  ] \
    \n}' > /neurodocker/neurodocker_specs.json
